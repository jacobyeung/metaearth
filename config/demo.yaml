# Annotated demo configuration, shows all options, 
# many of which have default settings (see config.py for config schema)

# fallback for each collection
# where each of these entries can be overridden 
# in each collection config under "collections"
default_collection:
  # will output to ${output}/collection_name/ by default, can override as an entry in the collection config
  outdir: data/demo-extraction
  # default datetime range for each collection, 
  # can override as an entry in the collection config
  # Single date+time, or a range ('/' separator), 
  # formatted to RFC 3339, section 5.6. 
  # Use double dots .. for open date ranges.
  datetime: 2021-04-01/2021-04-23
  # default aoi for each collection (use geojson format - see geojson.io)
  # can override as an entry in the collection config
  # this demo contains a small section in Yosemite
  aoi_file: config/aoi/demo.json
  # Max number of items 
  # (not assets, e.g. each item could have 3 images)
  # to download. -1 for unlimited (or limit set)
  # by the provider
  max_items: -1
  # default provider for each collection, can override as an entry in the collection config

providers:
  # provider id
  - id: MPC
    # collections describe the assets to extract.
    # the collection id, e.g. cop-dem-glo-90
    # is the id used to find the collection
    # in this case copernicus DEM global 90m
    # from the provider, in this case
    # Microsoft Planetary Computer
    collections:
      # - id: cop-dem-glo-90
      #   outdir: data/demo-extraction-dem-glo-90
      #   # Explicitly set the assets to be downloaded or use `all` to download all assets, like this:
      #   # assets:
      #   #  - all
      #   assets:
      #     - data
        ##
        ## Adds about 200mb of assets; commented out for demo but uncomment to test
        - id: landsat-8-c2-l2
          datetime: 2021-01-11/2021-01-28
          aoi_file: ./config/aoi/conus-expanded.json
          assets:
            - all 
            # - SR_B3
            # - SR_B4
            # - SR_B5
          max_items: 1
        ##
        ## Another example, but sen 1 files are huge, so commented out (adds 10gb)
        # sentinel-1-rtc:
        #   datetime: 2021-04-21/2021-04-23
        #   aoi_file: ./config/aoi/conus-expanded.json
        #   assets: 
        #     - all
        #   max_items: 1

system:
  # how many concurrent procs to use for 
  # extracting the assets
  # set to -1 to use all available procs
  max_concurrent_extractions: 10

  # number of attempt downloading an asset if error/issues encountered
  max_download_attempts: 3

  # DEBUG, INFO, WARN, ERROR, FATAL
  log_level: INFO
  
  # Write the logs here
  log_outdir: ./logs

  # Remove existing files if their filesize does not match the size 
  # of the asset on the remote server and re-extract
  remove_existing_if_wrong_size: True

  # If assets are missing file sizes, query using HTTP request
  # (this can be slow for large collections)
  query_asset_sizes: True

  # don't actually download, just print out what would be downloaded
  dry_run: False
  